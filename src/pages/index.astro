---
import Layout from '../layouts/Layout.astro';

import Card from '../components/Card.astro';

---

<Layout title="Lili cantou: A contagem regressiva">
	<main>
    <div class="text-container">
      <h1> <span class="first-text">Lili cantou: </span> </h1>
      <h2><span class="second-text">  A contagem regressiva</span></h2>
    </div>
      
		<div id="countdown" class="countdown">
      <div  class="time">
        <h2 class="text-gradient" id="weeks">00</h2>
        <small>weeks</small>
      </div>
			<div  class="time">
				<h2 class="text-gradient" id="days">00</h2>
				<small>days</small>
			</div>
			<div  class="time">
				<h2 class="text-gradient" id="hours">00</h2>
				<small>hours</small>
			</div>
			<div  class="time">
				<h2 class="text-gradient" id="minutes">00</h2>
				<small>minutes</small>
			</div>
			<div  class="time">
				<h2 class="text-gradient" id="seconds">00</h2>
				<small>seconds</small>
			</div>
		</div>

    
    <div id="countDownImage" class="countdown-image">
    <Card />

    </div>
    <div id="audio" class="audio-container"></div>


	</main>
</Layout>

<style>
	main {
		width: 100%;
    height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 40px;
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
    .text-container {
      width: auto;
      max-width: 700px;
      & h1 {
      margin: 0;
      margin-bottom: 10px;
      font-weight: 600;
      line-height: 1.4;
      text-wrap: balance;
      text-align: center;
      transform: rotate(-5deg);
      .first-text {
        padding: 5px;
        font-size: 5rem;
        background-color: #e9510a;
        color: #e1fff9;
       
      }
    }
    & h2 {
        margin: 0;
        font-weight: 600;
        line-height: 1.4;
        text-wrap: balance;
        text-align: center;
        .second-text {
          padding: 5px;
          font-size: 3.5rem;
          background-color: #ff7402;
          color: #e1fff9;
        }
      }

    }
		.countdown {
			width: 100%;
			display: flex;
			justify-content: center;
			gap: 50px;
			.time {
				display: flex;
				flex-direction: column;
				align-items: center;
				& h2 {
          margin: 10px 0;
					font-size: 6.5rem;
				}
        & small {
          font-size: 1.8rem;
          font-weight: 500;
          text-transform: capitalize;
          color: #ff7402;
        }
			}
	    }
      .countdown-image {
        display: none;
        width: 80%;
        justify-content: center;
        opacity: 0;
        transition: 1s all ease-out;
      }
      & audio {
        margin-top: 30px;
      }
	}


  @media (max-width: 470px) {
    
    main {
    gap: 30px;
    .text-container {
        & h1 {
          .first-text {
            font-size: 2.8rem;
          }
      }
      & h2 {
          .second-text {
            font-size: 2rem;
          }
        }
    }
		.countdown {
			gap: 25px;
			.time {
				& h2 {
          margin: 0;
					font-size: 3.8rem;
				}
        & small {
          font-size: 1.1rem;
        }
			}
	    }
	}


  }


  .text-gradient {
    color: transparent;
      -webkit-background-clip: text;
      background-clip: text;
      background-image: linear-gradient(to left, #f57b18, #e1fff9, #cf4116, #faeb1e, #e1fff9, #f57b18);
      animation: color 8s linear infinite;
       background-size: 500%;    
  }

@keyframes color {
    0% {
        background-position: 0% 50%;
    }

    50% {
        background-position: 100% 50%;
    }

    100% {
      background-position: 0% 50%;
    }
}

</style>


<script>
    import confetti from 'canvas-confetti'

    
document.addEventListener("DOMContentLoaded", () => {

const weeks = document.getElementById('weeks');
const days = document.getElementById('days');
const hours = document.getElementById('hours');
const minutes = document.getElementById('minutes');
const seconds = document.getElementById('seconds');
const countdownImage = document.getElementById('countDownImage')

//songs
const songs = [
  '/assets/audio/final-countdown.mp3',
  '/assets/audio/song2.mp3','/assets/audio/song3.mp3','/assets/audio/song4.mp3','/assets/audio/song6.mp3','/assets/audio/song7.mp3'
];

// target date
const targetTime = new Date(`July 3 2024 18:00:00`).getTime()
const currentTime = new Date().getTime()
let diff = targetTime - currentTime;

//create audio element
const audioConter = document.getElementById('audio')
const audioElement = new Audio()
audioElement.controls = true
audioElement.autoplay = true
audioElement.innerHTML = `Your browser does not support HTML5 Audio.`
audioConter.appendChild(audioElement)


const playRandomSong = () => {
  const randomIndex = Math.floor(Math.random() * songs.length)
  audioElement.src = songs[randomIndex]
  audioElement.play()

  console.log(`Playing: ${audioElement.src}`)
}
audioElement.onended = playRandomSong


// add confetti
const callFireworks = ()=> {
    const duration = 15 * 1000;
    const animationEnd = Date.now() + duration;
    const defaults = { startVelocity: 30, spread: 360, ticks: 60, zIndex: 0 };

      
    function randomInRange(min, max) {
    return Math.random() * (max - min) + min;
    }

    var interval = setInterval(function() {
    var timeLeft = animationEnd - Date.now();

    if (timeLeft <= 0) {
      return clearInterval(interval);
    }

    var particleCount = 50 * (timeLeft / duration);
    // since particles fall down, start a bit higher than random
    confetti({ ...defaults, particleCount, origin: { x: randomInRange(0.1, 0.3), y: Math.random() - 0.2 } });
    confetti({ ...defaults, particleCount, origin: { x: randomInRange(0.7, 0.9), y: Math.random() - 0.2 } });
    }, 250);
  }


  const imageCountdown = () => {
    countdownImage.style.opacity = '1';
    countdownImage.style.display = 'flex';
  }

const updateCountdown = () => {
   console.log(diff)
   
  const remainingweeks = Math.max(Math.floor(diff / 1000 / 60 / 60 / 24 / 7));
  const remainingDays = Math.max(Math.floor(diff / 1000 / 60 / 60 / 24 ) % 7);
  const remainingHours = Math.max(Math.floor(diff / 1000 / 60 / 60) % 24);
  const remainingMinutes = Math.max(Math.floor(diff / 1000 / 60) % 60);
  const remainingSeconds = Math.max(Math.floor(diff / 1000 ) % 60);

  if ( remainingweeks === 0 && remainingDays === 0 && remainingHours === 0 && remainingMinutes === 0 && remainingSeconds === 0) {
  callFireworks();
  clearInterval(countdownInterval);
  imageCountdown();
}


   weeks.innerHTML = `${remainingweeks}`
   days.innerHTML = `${remainingDays}`
   hours.innerHTML = `${remainingHours < 10 ? '0' + remainingHours  : remainingHours}`
   minutes.innerHTML = `${remainingMinutes < 10 ? '0' + remainingMinutes : remainingMinutes}`
   seconds.innerHTML = `${remainingSeconds < 10 ? '0' + remainingSeconds : remainingSeconds}`

}

const countdownInterval = setInterval(() => {
  updateCountdown();
      diff -= 1000;
      if (diff < 0) {
        diff = 0; // Asegura que diff no sea negativo
    }
}, 1000);

playRandomSong()

})

</script>